"MCP Server for the GitHub API, enabling file operations, repository management, search functionality, and more.\ncreate_or_update_file\nCreate or update a single file in a repository\nInputs:\nowner\n (string): Repository owner (username or organization)\nrepo\n (string): Repository name\npath\n (string): Path where to create/update the file\ncontent\n (string): Content of the file\nmessage\n (string): Commit message\nbranch\n (string): Branch to create/update the file in\nsha\n (optional string): SHA of file being replaced (for updates)\nReturns: File content and commit details\npush_files\nPush multiple files in a single commit\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nbranch\n (string): Branch to push to\nfiles\n (array): Files to push, each with \npath\n and \ncontent\nmessage\n (string): Commit message\nReturns: Updated branch reference\nsearch_repositories\nSearch for GitHub repositories\nInputs:\nquery\n (string): Search query\npage\n (optional number): Page number for pagination\nperPage\n (optional number): Results per page (max 100)\nReturns: Repository search results\ncreate_repository\nCreate a new GitHub repository\nInputs:\nname\n (string): Repository name\ndescription\n (optional string): Repository description\nprivate\n (optional boolean): Whether repo should be private\nautoInit\n (optional boolean): Initialize with README\nReturns: Created repository details\nget_file_contents\nGet contents of a file or directory\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npath\n (string): Path to file/directory\nbranch\n (optional string): Branch to get contents from\nReturns: File/directory contents\ncreate_issue\nCreate a new issue\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\ntitle\n (string): Issue title\nbody\n (optional string): Issue description\nassignees\n (optional string[]): Usernames to assign\nlabels\n (optional string[]): Labels to add\nmilestone\n (optional number): Milestone number\nReturns: Created issue details\ncreate_pull_request\nCreate a new pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\ntitle\n (string): PR title\nbody\n (optional string): PR description\nhead\n (string): Branch containing changes\nbase\n (string): Branch to merge into\ndraft\n (optional boolean): Create as draft PR\nmaintainer_can_modify\n (optional boolean): Allow maintainer edits\nReturns: Created pull request details\nfork_repository\nFork a repository\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\norganization\n (optional string): Organization to fork to\nReturns: Forked repository details\ncreate_branch\nCreate a new branch\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nbranch\n (string): Name for new branch\nfrom_branch\n (optional string): Source branch (defaults to repo default)\nReturns: Created branch reference\nlist_issues\nList and filter repository issues\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nstate\n (optional string): Filter by state ('open', 'closed', 'all')\nlabels\n (optional string[]): Filter by labels\nsort\n (optional string): Sort by ('created', 'updated', 'comments')\ndirection\n (optional string): Sort direction ('asc', 'desc')\nsince\n (optional string): Filter by date (ISO 8601 timestamp)\npage\n (optional number): Page number\nper_page\n (optional number): Results per page\nReturns: Array of issue details\nupdate_issue\nUpdate an existing issue\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nissue_number\n (number): Issue number to update\ntitle\n (optional string): New title\nbody\n (optional string): New description\nstate\n (optional string): New state ('open' or 'closed')\nlabels\n (optional string[]): New labels\nassignees\n (optional string[]): New assignees\nmilestone\n (optional number): New milestone number\nReturns: Updated issue details\nadd_issue_comment\nAdd a comment to an issue\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nissue_number\n (number): Issue number to comment on\nbody\n (string): Comment text\nReturns: Created comment details\nsearch_code\nSearch for code across GitHub repositories\nInputs:\nq\n (string): Search query using GitHub code search syntax\nsort\n (optional string): Sort field ('indexed' only)\norder\n (optional string): Sort order ('asc' or 'desc')\nper_page\n (optional number): Results per page (max 100)\npage\n (optional number): Page number\nReturns: Code search results with repository context\nsearch_issues\nSearch for issues and pull requests\nInputs:\nq\n (string): Search query using GitHub issues search syntax\nsort\n (optional string): Sort field (comments, reactions, created, etc.)\norder\n (optional string): Sort order ('asc' or 'desc')\nper_page\n (optional number): Results per page (max 100)\npage\n (optional number): Page number\nReturns: Issue and pull request search results\nsearch_users\nSearch for GitHub users\nInputs:\nq\n (string): Search query using GitHub users search syntax\nsort\n (optional string): Sort field (followers, repositories, joined)\norder\n (optional string): Sort order ('asc' or 'desc')\nper_page\n (optional number): Results per page (max 100)\npage\n (optional number): Page number\nReturns: User search results\nlist_commits\nGets commits of a branch in a repository\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npage\n (optional string): page number\nper_page\n (optional string): number of record per page\nsha\n (optional string): branch name\nReturns: List of commits\nget_issue\nGets the contents of an issue within a repository\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nissue_number\n (number): Issue number to retrieve\nReturns: Github Issue object & details\nget_pull_request\nGet details of a specific pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nReturns: Pull request details including diff and review status\nlist_pull_requests\nList and filter repository pull requests\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\nstate\n (optional string): Filter by state ('open', 'closed', 'all')\nhead\n (optional string): Filter by head user/org and branch\nbase\n (optional string): Filter by base branch\nsort\n (optional string): Sort by ('created', 'updated', 'popularity', 'long-running')\ndirection\n (optional string): Sort direction ('asc', 'desc')\nper_page\n (optional number): Results per page (max 100)\npage\n (optional number): Page number\nReturns: Array of pull request details\ncreate_pull_request_review\nCreate a review on a pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nbody\n (string): Review comment text\nevent\n (string): Review action ('APPROVE', 'REQUEST_CHANGES', 'COMMENT')\ncommit_id\n (optional string): SHA of commit to review\ncomments\n (optional array): Line-specific comments, each with:\npath\n (string): File path\nposition\n (number): Line position in diff\nbody\n (string): Comment text\nReturns: Created review details\nmerge_pull_request\nMerge a pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\ncommit_title\n (optional string): Title for merge commit\ncommit_message\n (optional string): Extra detail for merge commit\nmerge_method\n (optional string): Merge method ('merge', 'squash', 'rebase')\nReturns: Merge result details\nget_pull_request_files\nGet the list of files changed in a pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nReturns: Array of changed files with patch and status details\nget_pull_request_status\nGet the combined status of all status checks for a pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nReturns: Combined status check results and individual check details\nupdate_pull_request_branch\nUpdate a pull request branch with the latest changes from the base branch (equivalent to GitHub's \"Update branch\" button)\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nexpected_head_sha\n (optional string): The expected SHA of the pull request's HEAD ref\nReturns: Success message when branch is updated\nget_pull_request_comments\nGet the review comments on a pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nReturns: Array of pull request review comments with details like the comment text, author, and location in the diff\nget_pull_request_reviews\nGet the reviews on a pull request\nInputs:\nowner\n (string): Repository owner\nrepo\n (string): Repository name\npull_number\n (number): Pull request number\nReturns: Array of pull request reviews with details like the review state (APPROVED, CHANGES_REQUESTED, etc.), reviewer, and review body\n"