"A Model Context Protocol server that provides browser automation capabilities using Puppeteer. This server enables LLMs to interact with web pages, take screenshots, and execute JavaScript in a real browser environment.\npuppeteer_navigate\nNavigate to any URL in the browser\nInputs:\nurl\n (string, required): URL to navigate to\nlaunchOptions\n (object, optional): PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: \n{ headless: true, args: ['--user-data-dir=\"C:/Data\"'] }\nallowDangerous\n (boolean, optional): Allow dangerous LaunchOptions that reduce security. When false, dangerous args like \n--no-sandbox\n, \n--disable-web-security\n will throw errors. Default false.\npuppeteer_screenshot\nCapture screenshots of the entire page or specific elements\nInputs:\nname\n (string, required): Name for the screenshot\nselector\n (string, optional): CSS selector for element to screenshot\nwidth\n (number, optional, default: 800): Screenshot width\nheight\n (number, optional, default: 600): Screenshot height\npuppeteer_click\nClick elements on the page\nInput: \nselector\n (string): CSS selector for element to click\npuppeteer_hover\nHover elements on the page\nInput: \nselector\n (string): CSS selector for element to hover\npuppeteer_fill\nFill out input fields\nInputs:\nselector\n (string): CSS selector for input field\nvalue\n (string): Value to fill\npuppeteer_select\nSelect an element with SELECT tag\nInputs:\nselector\n (string): CSS selector for element to select\nvalue\n (string): Value to select\npuppeteer_evaluate\nExecute JavaScript in the browser console\nInput: \nscript\n (string): JavaScript code to execute\n"